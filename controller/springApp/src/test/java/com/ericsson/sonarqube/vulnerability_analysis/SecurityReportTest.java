package com.ericsson.sonarqube.vulnerability_analysis;

import com.ericsson.mongo.issues.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import javax.print.attribute.standard.Severity;

import static org.assertj.core.api.Assertions.assertThat;

class SecurityReportTest {
    private SecurityReport securityReport;

    @BeforeEach
    void setup() {
        securityReport = new SecurityReport();
    }
    //Key Severity Status CreationDate UpdateDate
    @Test
    void sortIssues() {
        SonarQubeIssue vulnerability = new SonarQubeIssue("test-key1", IssueSeverity.MAJOR, IssueStatus.OPEN, new String[]{"owasp-a3"}, IssueType.VULNERABILITY, SonarQubeIssue.parseNewDate("2020-10-19T14:11:00+0000"), SonarQubeIssue.parseNewDate("2020-10-19T14:12:00+0000"));
        SonarQubeIssue security_hotspot = new SonarQubeIssue("test-key2", IssueSeverity.MINOR, IssueStatus.OPEN, new String[]{"owasp-a4"}, IssueType.SECURITY_HOTSPOT, SonarQubeIssue.parseNewDate("2020-10-19T14:11:00+0000"), SonarQubeIssue.parseNewDate("2020-10-19T14:12:00+0000"));
        SonarQubeIssue code_smell = new SonarQubeIssue("test-key3", IssueSeverity.MAJOR, IssueStatus.OPEN, new String[]{"owasp-a5"}, IssueType.CODE_SMELL, SonarQubeIssue.parseNewDate("2020-10-19T14:11:00+0000"), SonarQubeIssue.parseNewDate("2020-10-19T14:12:00+0000"));
        SonarQubeIssue other = new SonarQubeIssue("test-key4", IssueSeverity.INFO, IssueStatus.OPEN, new String[]{"other"}, IssueType.BUG, SonarQubeIssue.parseNewDate("2020-10-19T14:11:00+0000"), SonarQubeIssue.parseNewDate("2020-10-19T14:12:00+0000"));
        securityReport.setIssues(new SonarQubeIssue[]{vulnerability, security_hotspot, code_smell, other});
        assertThat(securityReport.sortIssues())
                .isInstanceOf(SortedIssues.class);
    }

    @Test
    void setTotal_sets_total_and_getTotal_gets_total() {
        securityReport.setTotal(5);
        assertThat(securityReport.getTotal()).isEqualTo(5);
    }
}