package com.ericsson.sonarqube.vulnerability_analysis;

import com.ericsson.mongo.connection.DBConnection;
import com.ericsson.mongo.issues.SortedIssues;
import com.ericsson.mongo.reports.OwaspCategory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.GetMapping;

import java.util.*;

@CrossOrigin(origins = {"eui-frontend", "http://localhost:8080"})
@RestController
public class SonarController {
    @Autowired
    private SonarQubeClient sonarQubeClient;

    @GetMapping("/")
    public String rootRoute() {
        return "Running";
    }

    @GetMapping("/sonarqube")
    public SonarProject sonarqube(@RequestParam String projectKey) {
        return sonarQubeClient.getSonarProject(projectKey);
    }

    @GetMapping("/sonarqube/totalVulnerabilities")
    public int totalVulnerabilities(@RequestParam String projectKey) {
        return sonarQubeClient.getSonarProject(projectKey).getTotal();
    }

    @GetMapping("/sonarqube/validateAuth")
    public String validateAuth() {
        return sonarQubeClient.validateAuth();
    }

    @GetMapping("/sonarqube/getAllProjects")
    public List<String> getAllProjects() {
        return sonarQubeClient.getAllProjects();
    }

    @GetMapping("/sonarqube/oldreport")
    public SecurityReport generateOldReport(@RequestParam String projectKey) {
        return sonarQubeClient.generateReport(projectKey);
    }

    @GetMapping("/sonarqube/report")
    public Map<Integer, OwaspCategory> generateReport(@RequestParam String projectKey) {
        SecurityReport securityReport = sonarQubeClient.generateReport(projectKey);
        SortedIssues sortedIssues = securityReport.sortIssues();
        Map<Integer, OwaspCategory> categories = sortedIssues.sortCategories();
        insertProject(categories, projectKey);
        return categories;
    }

    public void insertProject(Map<Integer, OwaspCategory> categories, String projectKey) {
        DBConnection.startConnection();
        DBConnection.insertProject(categories, projectKey);
    }
}
