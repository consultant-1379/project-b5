package com.ericsson.sonarqube.vulnerability_analysis;

import com.ericsson.mongo.issues.ProjectKeys;
import com.ericsson.mongo.issues.SonarComponent;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.List;

public class SonarQubeClient {
    @Autowired
    private RestTemplate restTemplate;
    public static final String BASE = "https://codeanalyzer2.internal.ericsson.com/api/";

    public SonarProject getSonarProject(String projectKey) {
        String finalUrl = BASE + String.format("issues/search?resolved=false&s=FILE_LINE&cwe=unknown&ps=100&organization=default-organization&facets=owaspTop10,sansTop25,cwe&componentKeys=%s", projectKey);
        return restTemplate.getForObject(finalUrl, SonarProject.class);
    }

    public String validateAuth() {
        String finalUrl = "https://sonarqube.lmera.ericsson.se/api/authentication/validate";
        return restTemplate.getForObject(finalUrl, String.class);
    }

    public List<String> getAllProjects(){
        String finalUrl = BASE + "components/search?qualifiers=TRK&ps=500";
        List<String> projectKeys = new ArrayList<>();
        ProjectKeys sonarComponents = restTemplate.getForObject(finalUrl, ProjectKeys.class);
        if (sonarComponents != null) {
            for(SonarComponent component : sonarComponents.getComponents()){
                projectKeys.add(component.getKey());
            }
        }
         return projectKeys;
    }

    public SecurityReport generateReport(String projectKey) {
        String finalUrl = String.format("%sissues/search?componentKeys=%s&owaspTop10=a1,a2,a3,a4,a5,a6,a7,a8,a9,a10", BASE, projectKey);
        return restTemplate.getForObject(finalUrl, SecurityReport.class);
    }
}
